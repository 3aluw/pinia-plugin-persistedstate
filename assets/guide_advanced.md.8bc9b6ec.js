import{_ as s,c as a,o as n,a as p}from"./app.325b5aa2.js";const D=JSON.parse('{"title":"Advanced Usage","description":"","frontmatter":{},"headers":[{"level":2,"title":"Global persistence options","slug":"global-persistence-options"},{"level":2,"title":"Multiple persistences per-store","slug":"multiple-persistences-per-store"},{"level":2,"title":"Forcing the rehydration","slug":"forcing-the-rehydration"}],"relativePath":"guide/advanced.md","lastUpdated":1659273005000}'),l={name:"guide/advanced.md"},o=p(`<h1 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-hidden="true">#</a></h1><p>The plugin also exposes additional APIs for more advanced use cases.</p><h2 id="global-persistence-options" tabindex="-1">Global persistence options <a class="header-anchor" href="#global-persistence-options" aria-hidden="true">#</a></h2><p>Instead of using the default export when isntalling the plugin, you can use the exposed <code>createPersistedState</code> method to initialize the plugin with global options. These options become the new default options for all stores within the app.</p><blockquote><p>This method is sometimes referred to as factory function.</p></blockquote><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">createPinia</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;pinia&#39;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">createPersistedState</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;pinia-plugin-persistedstate&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">pinia</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">createPinia</span><span style="color:#858585;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">pinia</span><span style="color:#858585;">.</span><span style="color:#A1B567;">use</span><span style="color:#858585;">(</span><span style="color:#A1B567;">createPersistedState</span><span style="color:#858585;">({</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#E0A569;">storage</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">sessionStorage</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#858585;">}))</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">createPinia</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;pinia&#39;</span></span>
<span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">createPersistedState</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;pinia-plugin-persistedstate&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">pinia</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">createPinia</span><span style="color:#8E8F8B;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8C862B;">pinia</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">use</span><span style="color:#8E8F8B;">(</span><span style="color:#6C7834;">createPersistedState</span><span style="color:#8E8F8B;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B58451;">storage</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">sessionStorage</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#8E8F8B;">}))</span></span>
<span class="line"></span></code></pre></div><p>In this example, every store declaring <code>persist: true</code> will by default persist data to <code>sessionStorage</code>.</p><p>Available global options include:</p><ul><li><a href="/pinia-plugin-persistedstate/guide/config.html#storage"><code>storage</code></a></li><li><a href="/pinia-plugin-persistedstate/guide/config.html#serializer"><code>serializer</code></a></li><li><a href="/pinia-plugin-persistedstate/guide/config.html#beforeRestore"><code>beforeRestore</code></a></li><li><a href="/pinia-plugin-persistedstate/guide/config.html#afterRestore"><code>afterRestore</code></a></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Any option passed to a store&#39;s <code>persist</code> configuration will override its counterpart declared in the global options.</p></div><h2 id="multiple-persistences-per-store" tabindex="-1">Multiple persistences per-store <a class="header-anchor" href="#multiple-persistences-per-store" aria-hidden="true">#</a></h2><p>There may be specific use cases where you need to persist data from a single store to different storages. The <code>persist</code> option also accepts an array of configurations.</p><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">defineStore</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A1B567;">defineStore</span><span style="color:#858585;">(</span><span style="color:#C98A7D;">&#39;store&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">state</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">({</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#E0A569;">toLocal</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;&#39;</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#E0A569;">toSession</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;&#39;</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#E0A569;">toNowhere</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;&#39;</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#858585;">}),</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#E0A569;">persist</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">paths</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#C98A7D;">&#39;toLocal&#39;</span><span style="color:#858585;">],</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">storage</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">localStorage</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">},</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">paths</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#C98A7D;">&#39;toSession&#39;</span><span style="color:#858585;">],</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">storage</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">sessionStorage</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">},</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#858585;">],</span></span>
<span class="line"><span style="color:#858585;">})</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6C7834;">defineStore</span><span style="color:#8E8F8B;">(</span><span style="color:#B56959;">&#39;store&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">state</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B58451;">toLocal</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;&#39;</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B58451;">toSession</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;&#39;</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B58451;">toNowhere</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;&#39;</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8E8F8B;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B58451;">persist</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">paths</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#B56959;">&#39;toLocal&#39;</span><span style="color:#8E8F8B;">],</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">storage</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">localStorage</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">paths</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#B56959;">&#39;toSession&#39;</span><span style="color:#8E8F8B;">],</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">storage</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">sessionStorage</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8E8F8B;">],</span></span>
<span class="line"><span style="color:#8E8F8B;">})</span></span>
<span class="line"></span></code></pre></div><p>In this example, the <code>toLocal</code> value will be persisted in <code>localStorage</code> while the <code>toSession</code> value will be persisted in <code>sessionStorage</code>. <code>toNowhere</code> will not be persisted.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Be careful when not specifying a <code>paths</code> option or targetting a same path in two persistence configurations. This can lead to data inconsistency. During the rehydration process, persistences are processed in the same order they are decalred.</p><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">defineStore</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A1B567;">defineStore</span><span style="color:#858585;">(</span><span style="color:#C98A7D;">&#39;store&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">state</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">({</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#E0A569;">someData</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;Hello Pinia&#39;</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#858585;">}),</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#E0A569;">persist</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">storage</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">localStorage</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">},</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">      </span><span style="color:#E0A569;">storage</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">sessionStorage</span><span style="color:#858585;">,</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#858585;">},</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#858585;">],</span></span>
<span class="line"><span style="color:#858585;">})</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6C7834;">defineStore</span><span style="color:#8E8F8B;">(</span><span style="color:#B56959;">&#39;store&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">state</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B58451;">someData</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;Hello Pinia&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8E8F8B;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B58451;">persist</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">storage</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">localStorage</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B58451;">storage</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">sessionStorage</span><span style="color:#8E8F8B;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#8E8F8B;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8E8F8B;">],</span></span>
<span class="line"><span style="color:#8E8F8B;">})</span></span>
<span class="line"></span></code></pre></div><p>In this specific case, on hydration, the data retrieved from <code>sessionStorage</code> will replace the data retrieved from <code>localStorage</code>.</p></div><h2 id="forcing-the-rehydration" tabindex="-1">Forcing the rehydration <a class="header-anchor" href="#forcing-the-rehydration" aria-hidden="true">#</a></h2><p>In case you need to manually trigger hydration from storage, every store now exposes a <code>$hydrate</code> method. By default, calling this method will also trigger the <code>beforeRestore</code> and <code>afterRestore</code> hooks. You can avoid the hooks triggering by specifying the method not to.</p><p>Given this store:</p><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">defineStore</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">useStore</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">defineStore</span><span style="color:#858585;">(</span><span style="color:#C98A7D;">&#39;store&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#A1B567;">state</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">({</span></span>
<span class="line"><span style="color:#DBD7CA;">    </span><span style="color:#E0A569;">someData</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;Hello Pinia&#39;</span></span>
<span class="line"><span style="color:#DBD7CA;">  </span><span style="color:#858585;">})</span></span>
<span class="line"><span style="color:#858585;">})</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#1C6B48;">import</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">useStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">defineStore</span><span style="color:#8E8F8B;">(</span><span style="color:#B56959;">&#39;store&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#6C7834;">state</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B58451;">someData</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;Hello Pinia&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#8E8F8B;">})</span></span>
<span class="line"><span style="color:#8E8F8B;">})</span></span>
<span class="line"></span></code></pre></div><p>You can call <code>$hydrate</code>:</p><div class="language-ts"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">store</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">useStore</span><span style="color:#858585;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">store</span><span style="color:#858585;">.</span><span style="color:#A1B567;">$hydrate</span><span style="color:#858585;">({</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">runHooks</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">false</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">})</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">store</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">useStore</span><span style="color:#8E8F8B;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8C862B;">store</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">$hydrate</span><span style="color:#8E8F8B;">({</span><span style="color:#393A34;"> </span><span style="color:#B58451;">runHooks</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">false</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">})</span></span>
<span class="line"></span></code></pre></div><p>This will fetch data from the storage and replace the current state with it. In the example above, hooks will not be triggered.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In most cases, you should not need to manually hydrate the state. Make sure you know what you are doing, and the reason you are using <code>$hydrate</code> is not due to a bug (of either your implementation or the plugin itself).</p></div>`,23),e=[o];function t(c,r,y,i,B,A){return n(),a("div",null,e)}var C=s(l,[["render",t]]);export{D as __pageData,C as default};
