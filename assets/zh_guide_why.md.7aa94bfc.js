import{_ as s,c as a,o as n,a as o}from"./app.9dcac257.js";const B=JSON.parse('{"title":"为什么你应该使用该插件？","description":"","frontmatter":{},"headers":[{"level":2,"title":"你需要一个插件来保存 Store 吗？","slug":"你需要一个插件来保存-store-吗","link":"#你需要一个插件来保存-store-吗","children":[]},{"level":2,"title":"那么你为什么需要该插件？","slug":"那么你为什么需要该插件","link":"#那么你为什么需要该插件","children":[]}],"relativePath":"zh/guide/why.md","lastUpdated":1676503942000}'),e={name:"zh/guide/why.md"},l=o(`<h1 id="为什么你应该使用该插件" tabindex="-1">为什么你应该使用该插件？ <a class="header-anchor" href="#为什么你应该使用该插件" aria-hidden="true">#</a></h1><p>这个插件诞生于 Pinia 刚出现的时候。在 Pinia 正式取代 <a href="https://vuex.vuejs.org/" target="_blank" rel="noreferrer">VueX</a> 之前，它能够为 Pinia 提供与 <a href="https://github.com/robinvdvleuten/vuex-persistedstate" target="_blank" rel="noreferrer">vuex-persistedstate</a> 类似的功能。</p><h2 id="你需要一个插件来保存-store-吗" tabindex="-1">你需要一个插件来保存 Store 吗？ <a class="header-anchor" href="#你需要一个插件来保存-store-吗" aria-hidden="true">#</a></h2><p>答案是“<em>不需要</em>”的。其实有很多方法可以持久化你的数据，例如保存在 <code>localStorage</code> 中，这甚至不需要向 Pinia 中添加插件。比如 <a href="https://vueuse.org/" target="_blank" rel="noreferrer">VueUse</a> 的 <code>useLocalStorage</code>：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defineStore</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">pinia</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">useLocalStorage</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">@vueuse/core</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">defineStore</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">store</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">someState</span><span style="color:#CB7676;"> = </span><span style="color:#80A665;">useLocalStorage</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">stored-state</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">initialValue</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{ </span><span style="color:#BD976A;">someState</span><span style="color:#666666;"> }</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useLocalStorage</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">@vueuse/core</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">store</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">someState</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useLocalStorage</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">stored-state</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">initialValue</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{ </span><span style="color:#B07D48;">someState</span><span style="color:#999999;"> }</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><h2 id="那么你为什么需要该插件" tabindex="-1">那么你为什么需要该插件？ <a class="header-anchor" href="#那么你为什么需要该插件" aria-hidden="true">#</a></h2><p><code>pinia-plugin-persistedstate</code> 旨在通过一致的 API 为每个人和每个项目中的 Pinia Store 提供持久化存储。如果你希望保存一个完整的 Store，或者需要细粒化配置 storage 和序列化的方式，该插件都为你提供了相应的功能，并且可以在你想要持久化的 Store 上使用相同的配置。</p><p>我们会积极地维护该插件，为你带来在持久化 Pinia Store 上最好的开发体验。如果你有任何问题或遇到任何 bug，又或者想要提出新的功能，我们非常欢迎你在 <a href="https://github.com/prazdevs/pinia-plugin-persistedstate" target="_blank" rel="noreferrer">GitHub 仓库</a>上<a href="https://github.com/prazdevs/pinia-plugin-persistedstate/blob/main/CONTRIBUTING.md" target="_blank" rel="noreferrer">提出你的想法</a>。</p>`,8),p=[l];function t(r,c,y,i,d,A){return n(),a("div",null,p)}const h=s(e,[["render",t]]);export{B as __pageData,h as default};
